//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0

&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <220>;
};

/ {
     macros {
        efore: erfore {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp e &kp f &kp o &kp r &kp e>;
        };
        unction: unction {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp u &kp n &kp k &kp t &kp i &kp o &kp n>;
        };
        on: on {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp o &kp n>;
        };
        ust: ust {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp u &kp s &kp t>;
        };
        ent: ent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp e &kp n &kp t>;
        };
        ion: ion {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp i &kp o &kp n>;
        };
        ment: ment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp m &kp e &kp n &kp t>;
        };
        er: er {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp e &kp r>;
        };
        hich: hich {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp h &kp i &kp c &kp h>;
        };
        es: es {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp e &kp s>;
        };
        spacebut: spacebut {  
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SPACE> , <&macro_tap &kp b> , <&macro_tap &kp u> , <&macro_tap &kp t>;
        };
        the: the {  
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp t &kp h &kp e>;
        };
        dotslash: dotslash {  
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp DOT &kp SLASH>;
        };
     };

     behaviors {
        mgc: magic_key {
            compatible = "zmk,behavior-antecedent-morph";
            label = "MAGIC_KEY";
            #binding-cells = <0>;
            defaults = <&kp N>;
            //Magic
            bindings = <&kp O>, <&efore>, <&kp Y>, <&kp Y>, <&kp U>, <&unction>, <&kp Y>, <&on>, <&ust>, <&kp S>, <&kp K>, <&ent>, <&ion>, <&kp A>, <&kp Y>, <&kp L>, <&kp K>, <&ment>, <&kp E>, <&er>, <&hich>, <&es>, <&kp P>, <&spacebut>, <&dotslash>, <&kp STAR>, <&kp STAR>, <&kp GT>, <&kp GT>, <&the>, <&the>, <&the>, <&kp LT>, <&kp GT>, <&kp SEMI>, <&kp SEMI>, <&kp SEMI>, <&kp SEMI>;
            //Leadek
            antecedents = <A B C D E F G I J K L M N O P R S T U V W X Y , . / * - = SPACE RET TAB GT LT RBKT DQT RBRC RPAR>;
            max-delay-ms = <10000>;
        };
     };

        keymap {
                compatible = "zmk,keymap";
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                base_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "BASE"                              ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃     V     ┃     M     ┃     L     ┃     C     ┃     P     ┃   ┃     B     ┃     *     ┃     U     ┃     O     ┃     Q     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃     S     ┃     T     ┃     R     ┃     D     ┃     Y     ┃   ┃     F     ┃     N     ┃     E     ┃     A     ┃     I     ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃     -     ┃     X     ┃     K     ┃     J     ┃     G     ┃     W     ┃   ┃     Z     ┃     H     ┃     ,     ┃     .     ┃     /     ┃     -     ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃           ┃           ┃   SPACE   ┃   ┃   SHIFT   ┃           ┃           ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &kp V       &kp M       &kp L       &kp C       &kp P           &kp B       &mgc        &kp U       &kp O       &kp Q
                &mt LGUI S  &mt LALT T  &mt LCTRL R &mt LSHFT D &kp Y           &kp F       &mt RSHFT N &mt RCTRL E &mt RALT A  &mt RGUI I
    &kp DOT     &kp X       &kp K       &kp J       &kp G       &kp W           &kp Z       &kp H       &kp COMMA   &kp DOT     &kp FSLH    &kp DOT
                                        &kp DOT   &kp DEL       &kp SPACE       &sk SHIFT   &key_repeat &kp DOT
                        >;
                };
        };
};
